class Solution{
  public:
  bool isPossiblePartition(int a[], int n, int k, int req_sum, int curr_sum, int mask){
    if(k == 1)
        return 1 ;
    if(curr_sum > req_sum)
        return 0 ;
    if(curr_sum == req_sum)
        return isPossiblePartition(a,n,k-1,req_sum,0,mask) ;
    bool res = 0 ;
    for(int i=0; i<n && !res; i++){
        if((mask & (1<<i)) == 0)
            res |= isPossiblePartition( a, n, k, req_sum, curr_sum + a[i], (mask|(1<<i)) ) ;
    }
    return res ;
}
    bool isKPartitionPossible(int a[], int n, int k)
    {
         //Your code here
          int sum = 0 ;
        for(int i=0; i<n; i++)
          sum += a[i] ; 
    
           if(sum % k)
         return 0 ;

    return isPossiblePartition(a,n,k,sum/k,0,0) ;
    }
};
